name: Deployment Pipeline

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
    types: [opened, synchronize]

env:
  PORT_LOCAL_APP: ${{ secrets.PORT_LOCAL_APP }}
  PORT_PROD_APP: ${{ secrets.PORT_PROD_APP }}
  PORT_TESTS: ${{ secrets.PORT_TESTS }}

  LOCAL_HOST_FRONT: ${{ secrets.LOCAL_HOST_FRONT }}

  POSTGRES_DB_NAME: ${{ secrets.POSTGRES_DB_NAME }}
  POSTGRES_DB_USER: ${{ secrets.POSTGRES_DB_USER }}
  POSTGRES_DB_PASSWORD: ${{ secrets.POSTGRES_DB_PASSWORD }}

  POSTGRES_DB_LOCAL_PORT: ${{ secrets.POSTGRES_DB_LOCAL_PORT }}
  POSTGRES_DB_DOCKER_PORT: ${{ secrets.POSTGRES_DB_DOCKER_PORT }}
  DATABASE_DOCKER_HOST: ${{ secrets.DATABASE_DOCKER_HOST }}

  PGADMIN_EMAIL: ${{ secrets.PGADMIN_EMAIL }}
  PGADMIN_PASSWORD: ${{ secrets.PGADMIN_PASSWORD }}

  JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

  EMAIL_NODEMAILER: ${{ secrets.EMAIL_NODEMAILER }}
  PASSWORD_NODEMAILER: ${{ secrets.PASSWORD_NODEMAILER }}

jobs:
  avoid_reduncy:
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          cache: "npm"
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      # - name: run tests
      #   run: docker compose -f docker-compose-dev.yml up jest-tests

  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          cache: "npm"
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      # - name: Docker Build
      #   run: |
      #     docker build -t appbox -f Dockerfile.dev .
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: build-artifact
      #     path: .
      - name: Compress artifacts
        run: zip -r build-artifact.zip .
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-artifact
          path: build-artifact.zip

  test:
    needs: [lint, build]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          cache: "npm"
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - uses: actions/download-artifact@v2
        # with:
        #   name: build-artifact
        #   path: .
      - name: Test
        run: npm run test
    #   run: docker compose -f docker-compose-dev.yml up jest-tests
